AUTOMAKE_OPTIONS=gnu

lib_LTLIBRARIES = libfastbit.la
libfastbit_la_SOURCES = part.cpp bord.cpp parth3d.cpp parth3da.cpp parth3db.cpp parth3dw.cpp parth2d.cpp parth.cpp array_t.cpp ibin.cpp query.cpp utilidor.cpp index.cpp column.cpp meshQuery.cpp party.cpp whereParser.cc ixambit.cpp bitvector.cpp bitvector64.cpp irange.cpp fileManager.cpp mensa.cpp irelic.cpp parti.cpp iroster.cpp colValues.cpp ixpack.cpp category.cpp ixpale.cpp bundle.cpp qExpr.cpp whereLexer.cc ixzone.cpp ixbylt.cpp tafel.cpp util.cpp icegale.cpp ixzona.cpp ixfuzz.cpp ixfuge.cpp isbiad.cpp ifade.cpp idbak2.cpp isapid.cpp icentre.cpp islice.cpp imesa.cpp jnatural.cpp jrange.cpp idirekte.cpp idbak.cpp capi.cpp ikeywords.cpp icmoins.cpp resource.cpp rids.cpp filter.cpp countQuery.cpp quaere.cpp whereClause.cpp selectClause.cpp dictionary.cpp selectParser.cc selectLexer.cc fromClause.cpp fromParser.cc fromLexer.cc
libfastbit_la_LDFLAGS = -version-info $(LIB_VERSION_INFO)

include_HEADERS = fastbit-config.h array_t.h bitvector.h bitvector64.h bord.h bundle.h capi.h category.h colValues.h column.h const.h countQuery.h dictionary.h fileManager.h horometer.h ibin.h ibis.h idirekte.h ikeywords.h index.h irelic.h iroster.h quaere.h mensa.h meshQuery.h part.h filter.h jnatural.h jrange.h whereClause.h whereLexer.h whereParser.hh qExpr.h query.h resource.h rids.h tab.h table.h tafel.h twister.h util.h utilidor.h location.hh position.hh stack.hh selectClause.h selectLexer.h selectParser.hh fromClause.h fromLexer.h fromParser.hh

EXTRA_DIST=whereLexer.ll whereParser.yy selectLexer.ll selectParser.yy fromLexer.ll fromParser.yy Doxyfile

# use a useless print statement to prevent the use of implicit rule
# to generating executable named predicate
parsers: whereLexer.cc whereParser.cc selectLexer.cc selectParser.cc fromLexer.cc fromParser.cc
	@echo Updated $@

docs: Doxyfile
	perl -pi -e 's/(PROJECT_NUMBER\s*=\s*).+/\1$(PACKAGE_VERSION)/' Doxyfile
	doxygen

# override the default rule generated by automake to make sure the prefix is changed
fastbit-config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi
	@if [ "`fgrep ' PACKAGE_' fastbit-config.h | wc -l`" -gt 0 ]; then \
	mv fastbit-config.h fastbit-config.bak; \
	sed -e 's/ PACKAGE_/ FASTBIT_/' fastbit-config.bak > fastbit-config.h; \
	if test ! fastbit-config.h -nt stamp-h1; then sleep 1; touch fastbit-config.h; else :; fi \
	fi

if MAINTAINER_MODE
# # rules to generate .hh and .cc files from lex/yacc files
location.hh position.hh stack.hh: whereParser.hh
whereParser.cc: whereParser.hh
	touch whereParser.cc
whereParser.hh: whereParser.yy
	bison -d -o whereParser.cc whereParser.yy
whereLexer.cc: whereLexer.ll whereParser.hh
	flex -o whereLexer.cc whereLexer.ll
selectParser.cc: selectParser.hh
	touch selectParser.cc
selectParser.hh: selectParser.yy
	bison -d -o selectParser.cc selectParser.yy
selectLexer.cc: selectLexer.ll selectParser.hh
	flex -o selectLexer.cc selectLexer.ll
fromParser.cc: fromParser.hh
	touch fromParser.cc
fromParser.hh: fromParser.yy
	bison -d -o fromParser.cc fromParser.yy
fromLexer.cc: fromLexer.ll fromParser.hh
	flex -o fromLexer.cc fromLexer.ll
endif

# targets that are not files
.PHONY: docs
