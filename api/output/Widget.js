Ext.data.JsonP.Widget({"meta":{},"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/widget.html#Widget' target='_blank'>widget.js</a></div></pre><div class='doc-contents'><p><a href=\"#!/api/Iris-property-Widget\" rel=\"Iris-property-Widget\" class=\"docClass\">Iris.Widget</a>. A controller class for managing data and renderers for\nvisualization</p>\n\n<pre class='inline-example '><code>var MyWidget = Iris.Widget.extend({});\nvar widget = new MyWidget();\n</code></pre>\n\n<p>Or:</p>\n\n<pre class='inline-example '><code>iris.require([\"widget\"], function (Widget) {\n    var widget = Widget.extend({});\n});\n</code></pre>\n</div><div class='members'></div></div>","component":false,"alternateClassNames":[],"autodetected":{},"aliases":{},"mixedInto":[],"parentMixins":[],"superclasses":[],"members":[],"mixins":[],"singleton":true,"subclasses":[],"name":"Widget","requires":[],"id":"class-Widget","tagname":"class","short_doc":"Iris.Widget. ...","files":[{"href":"widget.html#Widget","filename":"widget.js"}]});